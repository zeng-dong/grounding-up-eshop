# MongoDB
1. hub.docker.com/_mongo
2. pull image to local:
3. under solution src folder Open In Terminal
4. [docker pull mongo]
5. run: [docker run -d -p 27017:27017 --name shopping-mongo mongo]
6. [docker ps] to see the container
7. [docker logs -f shopping-mongo]
8. go into container file system: [docker exec -it shopping-mongo /bin/bash] and I see this: root@53534033ae7f:/#

# using mongo cli inside container
connect to interactive terminal for mongodb connection, run mongo commands. Needs Powershell.
1. [docker exec -it shopping-mongo /bin/bash]
2. [ls] to see what in there
3. [mongo], now the prompt is '>'
4. [show dbs] or [show databases]
5. [use CatalogDb] to create new database
6. [db.createCollection("Products")]
7. db.Products.insertMany([{ 'Name':'Asus Laptop','Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'ImageFile', 'Price':54.93 }, { 'Name':'HP Laptop','Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'ImageFile', 'Price':88.93 } ])
8. db.Products.find({}).pretty()
9. [db.Products.remove({})] if I want
10. [show collections]

# Container Orchestrator Support (for Catalog.API)
1. right click project and Add Container Orchestrator Support ...
2. select Docker Compose
3. select Linux
4. OK
5. a Dockerfile is generated under the project, and a docker-compose node is also generated under solution